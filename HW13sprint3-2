#include <iostream>
#include <vector>
#include <Windows.h>
#include<algorithm>
#include <fstream>
using namespace std;
int main() {
	int NI = 10, NO = 10, ni=10,no=5,lost=0; 
	int elapsedSeconds = 0, T = 1;
	int NofPackets[120];
	vector <int> queue;
	float sum=0;
	int capacity = 100;
	ofstream xx("out.txt");
	while (elapsedSeconds < 120) {
		Sleep(T * 1000);  // milliseconds
		ni = rand() % NI;
		no = rand() % NO;
		if (capacity < queue.size() + ni) {
			lost += queue.size() + ni - capacity;
			ni = capacity - queue.size();
		}

		//입력
		for (int i = 0; i < ni; i++) {
			queue.push_back(rand() % NI);//1-19사이숫자 넣기
			
		}

		for (int i = 0; i < no; i++) {
			if (queue.size() != 0) {
				
				queue.erase(queue.begin());
			}
		}
		NofPackets[elapsedSeconds] = queue.size();
		xx << NofPackets[elapsedSeconds] << endl;
		sum += NofPackets[elapsedSeconds];

		elapsedSeconds += T;

	}
	xx.close();
	cout << "손실" << lost << endl;
	cout << "평균" << sum / 120 << endl;
	sort(NofPackets, NofPackets + 120);
	cout << "최댓값" << NofPackets[119] << endl;
	
	return 123;
}

